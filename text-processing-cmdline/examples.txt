###  Semplici elaborazioni  ###

sort nomi.txt
cut -d ',' -f 1 persone.csv
cut -d ',' -f 2 persone.csv
cut -d ',' -f 3 persone.csv

###  grep  ###

grep L nomi.txt                        # Nomi che iniziano per L (maiuscola)
grep -i L nomi.txt                     # Nomi che contengono L
grep -iw Luca nomi.txt                 # Luca, non Gianluca

###  Semplici elaborazioni con la pipeline  ###

cat nomi.txt | sort
cat nomi.txt | sort | uniq
cat nomi.txt | sort | uniq | tr 'oalS' '0@15' # Es: Salvatore -> 5@1v@t0re
                                              # "passwordification"

###  sed  ###

netstat -tap
netstat -tap 2>/dev/null                                            # hide non-root warning
netstat -tap 2>/dev/null | sed '1,2 d'                              # remove headers
netstat -tap 2>/dev/null | sed '/dropbox/d'                         # sed delete
netstat -tap 2>/dev/null | sed 's/dropbox/nextcloud/'               # sed substitute
netstat -tap 2>/dev/null | sed '/LISTEN/s/dropbox/NEXTCLOUD/'       # sed conditional subst
netstat -tap 2>/dev/null | sed -e '/LISTEN/s/dropbox/NEXTCLOUD/' \
                               -e '/^tcp6/d'                        # sed multi cmd
netstat -tap 2>/dev/null | sed -r 's![0-9]+/[[:alnum:]-]+!...!'     # regexp match
netstat -tap 2>/dev/null | \
        sed -r 's!([0-9]+)/([[:alnum:]-]+)!\2 with PID \1!'         # regexp replace

# git-svn migration: create template authors file:
svn log --xml --quiet | grep author | sort -u | sed -r 's/.*>(.*?)<.*/\1 = /'

###  awk  ###

{ print }
  # Manca la condizione -> match ogni riga
  # Come 'cat'

/^Linux/
  # Manca l'azione -> azione di default: {print}
  # Come grep

/^Linux/ { count++ }
BEGIN    { count = 0 }
END      { print "Trovate " count " righe" }
  # Conta le righe che iniziano con "Linux"
  # Nota: l'ordine delle regole non è sequenziale

{
    for	(i = 0; i <= NF; i++)
	print "$" i ": " $i
}
  # Mostra il record e i field

{
    for (i = 0; i <= NF; i++) {
	print "$" i ": " $i \
	    (i == 0 ? " (questo è il record)" : "")
    }
}
  # piccola miglioria

BEGIN    { count = 0 }
         { count += NF }
END      { print count }
  # Conta le parole (come 'wc -w')

BEGIN    { FS = "," }
NF >= 3  { print $3 " " $2 }
  # Da un elenco CSV, es: \texttt{123,Rossi,Mario}
  # Estrae nome e cognome, es: \texttt{Mario Rossi}

/#define DEBUG_HERE/ { do_skip = 1 }
!do_skip
/^$/                 { do_skip = 0 }
  # Elimina sezioni di _3_ righe da file C (esempio: hello.c):
  #   //#define DEBUG_HERE
  #   undef DEBUG_HERE
  #   (empty line)
  # Nota: l'ordine delle regole conta!
